<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.7"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>CP264: Lab 6: src/stack_linked.h File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">CP264: Lab 6<span id="projectnumber">&#160;2025-01-05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.7 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',false,false,'search.php','Search');
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('stack__linked_8h.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle"><div class="title">stack_linked.h File Reference</div></div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &lt;stdio.h&gt;</code><br />
<code>#include &lt;stdlib.h&gt;</code><br />
<code>#include &quot;<a class="el" href="data_8h.htm">data.h</a>&quot;</code><br />
</div><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="nested-classes" name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_s_t_a_c_k___n_o_d_e.htm">STACK_NODE</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structstack__linked.htm">stack_linked</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="typedef-members" name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:a477aed8b44cc6e0a41c0f170501f20f0"><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="struct_s_t_a_c_k___n_o_d_e.htm">STACK_NODE</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="stack__linked_8h.htm#a477aed8b44cc6e0a41c0f170501f20f0">stack_node</a></td></tr>
<tr class="separator:a477aed8b44cc6e0a41c0f170501f20f0"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="func-members" name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a833f48ae5ddd26ab79c3d41ef24895f9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structstack__linked.htm">stack_linked</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="stack__linked_8h.htm#a833f48ae5ddd26ab79c3d41ef24895f9">stack_initialize</a> ()</td></tr>
<tr class="separator:a833f48ae5ddd26ab79c3d41ef24895f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa46e49cb952b0c53b8a7fdc519b6910a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="stack__linked_8h.htm#aa46e49cb952b0c53b8a7fdc519b6910a">stack_free</a> (<a class="el" href="structstack__linked.htm">stack_linked</a> **source)</td></tr>
<tr class="separator:aa46e49cb952b0c53b8a7fdc519b6910a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7b90e3e7b58251deb4c985bd80b6bd68"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="stack__linked_8h.htm#a7b90e3e7b58251deb4c985bd80b6bd68">stack_empty</a> (const <a class="el" href="structstack__linked.htm">stack_linked</a> *source)</td></tr>
<tr class="separator:a7b90e3e7b58251deb4c985bd80b6bd68"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a588173e6cf32809f1f0aef74d4a3ef34"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="stack__linked_8h.htm#a588173e6cf32809f1f0aef74d4a3ef34">stack_push</a> (<a class="el" href="structstack__linked.htm">stack_linked</a> *source, <a class="el" href="data_8h.htm#a8f1c9fafcef5a26e0b113b99d63365b1">data_ptr</a> item)</td></tr>
<tr class="separator:a588173e6cf32809f1f0aef74d4a3ef34"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8e508990421d23faef934a6d0aad2e35"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="stack__linked_8h.htm#a8e508990421d23faef934a6d0aad2e35">stack_peek</a> (const <a class="el" href="structstack__linked.htm">stack_linked</a> *source, <a class="el" href="data_8h.htm#a8f1c9fafcef5a26e0b113b99d63365b1">data_ptr</a> item)</td></tr>
<tr class="separator:a8e508990421d23faef934a6d0aad2e35"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7c6f5471b898f70be055118b6a244e8c"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="stack__linked_8h.htm#a7c6f5471b898f70be055118b6a244e8c">stack_pop</a> (<a class="el" href="structstack__linked.htm">stack_linked</a> *source, <a class="el" href="data_8h.htm#a8f1c9fafcef5a26e0b113b99d63365b1">data_ptr</a> *item)</td></tr>
<tr class="separator:a7c6f5471b898f70be055118b6a244e8c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7c40feef9bc74d4d35e1c954e1185493"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="stack__linked_8h.htm#a7c40feef9bc74d4d35e1c954e1185493">stack_print</a> (const <a class="el" href="structstack__linked.htm">stack_linked</a> *source)</td></tr>
<tr class="separator:a7c40feef9bc74d4d35e1c954e1185493"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><hr  />
<h2><a class="anchor" id="autotoc_md19"></a>
Linked Stack Header File</h2>
<dl class="section author"><dt>Author</dt><dd>David Brown, 123456789, <a href="#" onclick="location.href='mai'+'lto:'+'dbr'+'ow'+'n@w'+'lu'+'.ca'; return false;">dbrow<span class="obfuscator">.nosp@m.</span>n@wl<span class="obfuscator">.nosp@m.</span>u.ca</a></dd></dl>
<dl class="section version"><dt>Version</dt><dd>2025-01-06</dd></dl>
<hr  />
<p> DO NOT CHANGE CONTENTS </p>
</div><h2 class="groupheader">Typedef Documentation</h2>
<a id="a477aed8b44cc6e0a41c0f170501f20f0" name="a477aed8b44cc6e0a41c0f170501f20f0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a477aed8b44cc6e0a41c0f170501f20f0">&#9670;&#160;</a></span>stack_node</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef struct <a class="el" href="struct_s_t_a_c_k___n_o_d_e.htm">STACK_NODE</a> <a class="el" href="stack__linked_8h.htm#a477aed8b44cc6e0a41c0f170501f20f0">stack_node</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Stack node. </p>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="a7b90e3e7b58251deb4c985bd80b6bd68" name="a7b90e3e7b58251deb4c985bd80b6bd68"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7b90e3e7b58251deb4c985bd80b6bd68">&#9670;&#160;</a></span>stack_empty()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool stack_empty </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structstack__linked.htm">stack_linked</a> *&#160;</td>
          <td class="paramname"><em>source</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Determines if a stack is empty.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">source</td><td>- pointer to a stack. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>- TRUE if source is empty, FALSE otherwise </dd></dl>

</div>
</div>
<a id="aa46e49cb952b0c53b8a7fdc519b6910a" name="aa46e49cb952b0c53b8a7fdc519b6910a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa46e49cb952b0c53b8a7fdc519b6910a">&#9670;&#160;</a></span>stack_free()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void stack_free </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structstack__linked.htm">stack_linked</a> **&#160;</td>
          <td class="paramname"><em>source</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Frees stack memory. Frees all node and data memory.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">source</td><td>- pointer to a stack </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a833f48ae5ddd26ab79c3d41ef24895f9" name="a833f48ae5ddd26ab79c3d41ef24895f9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a833f48ae5ddd26ab79c3d41ef24895f9">&#9670;&#160;</a></span>stack_initialize()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structstack__linked.htm">stack_linked</a> * stack_initialize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Initializes a stack.</p>
<dl class="section return"><dt>Returns</dt><dd>- pointer to a stack </dd></dl>

</div>
</div>
<a id="a8e508990421d23faef934a6d0aad2e35" name="a8e508990421d23faef934a6d0aad2e35"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8e508990421d23faef934a6d0aad2e35">&#9670;&#160;</a></span>stack_peek()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool stack_peek </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structstack__linked.htm">stack_linked</a> *&#160;</td>
          <td class="paramname"><em>source</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="data_8h.htm#a8f1c9fafcef5a26e0b113b99d63365b1">data_ptr</a>&#160;</td>
          <td class="paramname"><em>item</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Returns a copy of the item on the top of a stack, stack is unchanged.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">source</td><td>- pointer to a stack </td></tr>
    <tr><td class="paramname">item</td><td>- pointer to a copy of the retrieved item </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>- TRUE if item peeked, FALSE otherwise (stack is empty) </dd></dl>

</div>
</div>
<a id="a7c6f5471b898f70be055118b6a244e8c" name="a7c6f5471b898f70be055118b6a244e8c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7c6f5471b898f70be055118b6a244e8c">&#9670;&#160;</a></span>stack_pop()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool stack_pop </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structstack__linked.htm">stack_linked</a> *&#160;</td>
          <td class="paramname"><em>source</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="data_8h.htm#a8f1c9fafcef5a26e0b113b99d63365b1">data_ptr</a> *&#160;</td>
          <td class="paramname"><em>item</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Removes and returns a pointer to the item on the top of a stack.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">source</td><td>- pointer to a stack </td></tr>
    <tr><td class="paramname">item</td><td>- pointer the item to remove </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>- TRUE if item popped, FALSE otherwise (stack is empty) </dd></dl>

</div>
</div>
<a id="a7c40feef9bc74d4d35e1c954e1185493" name="a7c40feef9bc74d4d35e1c954e1185493"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7c40feef9bc74d4d35e1c954e1185493">&#9670;&#160;</a></span>stack_print()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void stack_print </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structstack__linked.htm">stack_linked</a> *&#160;</td>
          <td class="paramname"><em>source</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Prints the items in a stack from top to bottom. (For testing only).</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">source</td><td>- pointer to a stack </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a588173e6cf32809f1f0aef74d4a3ef34" name="a588173e6cf32809f1f0aef74d4a3ef34"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a588173e6cf32809f1f0aef74d4a3ef34">&#9670;&#160;</a></span>stack_push()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool stack_push </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structstack__linked.htm">stack_linked</a> *&#160;</td>
          <td class="paramname"><em>source</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="data_8h.htm#a8f1c9fafcef5a26e0b113b99d63365b1">data_ptr</a>&#160;</td>
          <td class="paramname"><em>item</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Pushes a copy of an item onto a stack.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">source</td><td>- pointer to a stack </td></tr>
    <tr><td class="paramname">item</td><td>- pointer to the item to push </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.htm">src</a></li><li class="navelem"><a class="el" href="stack__linked_8h.htm">stack_linked.h</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.7 </li>
  </ul>
</div>
</body>
</html>
